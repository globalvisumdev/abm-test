<template>
  <div id="app">

    <!-- Left panel with cover effect-->
    <div class="panel panel-left panel-cover dark panel-init">
      <div class="view">
        <div class="page">
          <div class="navbar">
            <div class="navbar-bg"></div>
            <div class="navbar-inner">
              <div class="title">Left Panel</div>
            </div>
          </div>
          <div class="page-content">
            <div class="block">Left panel content goes here</div>
          </div>
        </div>
      </div>
    </div>
    <!-- Right panel with reveal effect-->
    <div class="panel panel-right panel-reveal dark">
      <div class="view">
        <div class="page">
          <div class="navbar">
            <div class="navbar-bg"></div>
            <div class="navbar-inner">
              <div class="title">Right Panel</div>
            </div>
          </div>
          <div class="page-content">
            <div class="block">Right panel content goes here</div>
          </div>
        </div>
      </div>
    </div>

    <!-- Tabbar for switching views-tabs -->
    <div class="toolbar toolbar-bottom tabbar-icons">
      <div class="toolbar-inner">
        <a href="/" class="tab-link tab-link-active">
          <i class="icon f7-icons if-not-md">house_fill</i>
          <i class="icon material-icons if-md">home</i>
          <span class="tabbar-label">Home</span>
        </a>
        <a href="/catalog/" class="tab-link">
          <i class="icon f7-icons if-not-md">square_list_fill</i>
          <i class="icon material-icons if-md">view_list</i>
          <span class="tabbar-label">Catalog</span>
        </a>
        <a href="/settings/" class="tab-link">
          <i class="icon f7-icons if-not-md">gear</i>
          <i class="icon material-icons if-md">settings</i>
          <span class="tabbar-label">Settings</span>
        </a>
      </div>
    </div>

    <!-- Your main view/tab, should have "view-main" class. It also has "tab-active" class -->
    <div id="view-home" class="view view-main view-init tab tab-active" data-url="/">
      <!-- Home page will be loaded here dynamically from / route -->
    </div>


    <!-- Popup -->
    <div class="popup" id="my-popup">
      <div class="view">
        <div class="page">
          <div class="navbar">
            <div class="navbar-bg"></div>
            <div class="navbar-inner">
              <div class="title">Popup</div>
              <div class="right">
                <a href="#" class="link popup-close">Close</a>
              </div>
            </div>
          </div>
          <div class="page-content">
            <div class="block">
              <p>Popup content goes here.</p>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Login Screen -->
    <div class="login-screen" id="my-login-screen">
      <div class="view">
        <div class="page">
          <div class="page-content login-screen-content">
            <div class="login-screen-title">Login</div>
            <div class="list">
              <ul>
                <li class="item-content item-input">
                  <div class="item-inner">
                    <div class="item-title item-label">Username</div>
                    <div class="item-input-wrap">
                      <input type="text" name="username" placeholder="Your username" value="${username}"
                        @input="${updateUsername}" />

                    </div>
                  </div>
                </li>
                <li class="item-content item-input">
                  <div class="item-inner">
                    <div class="item-title item-label">Password</div>
                    <div class="item-input-wrap">
                      <input type="password" name="password" placeholder="Your password" value="${password}"
                        @input="${updatePassword}" />

                    </div>
                  </div>
                </li>
              </ul>
            </div>
            <div class="list">
              <ul>
                <li>
                  <a href="#" class="item-link list-button login-button" @click="${alertLoginData}">Sign In</a>

                </li>
              </ul>
              <div class="block-footer">Some text about login information.<br />Click "Sign In" to close Login Screen
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

  </div>
</template>
<script>
  import methods from "../src/js/methods.mjs"
  export default (props, {
    $f7,
    $update,
    $on,
    // tengo que definirlo aca mepa , puede ser=? 
  }) => {
    console.log("prueba");







    // Login screen demo data
    let username = 'sandia';
    let password = '123';

    const updateUsername = (e) => {
      username = e.target.value;
      $update();
    }
    const updatePassword = (e) => {
      password = e.target.value;
      $update();
    }
    const alertLoginData = () => {
      login()
      $f7.dialog.alert('Username: ' + username + '<br/>Password: ' + password, () => {
        $f7.loginScreen.close();
      });
    }

    // function urlFetch(data) {
    //   const params = new URLSearchParams();
    //   for (const key in data) {
    //     params.append(key, data[key]);
    //   }

    //   return params;
    // }
    // const login = async () => {
    function login() {
      // let body = methods.urlFetch({
      //   username: username,
      // });
      return new Promise((resolve, reject) => {
        fetch(`http://172.16.0.231:3320/users/validar/${username}/${password}`, {
            method: "GET",
          })
          .then(data => data.json())
          .then(res => {

            // irAlHome()
            // todo: mejorar esta logica 

            if (res.usuarioLogueado) {
              console.log("Estas logueado")
            } else {
              console.log("No existe tu usuario en la BD")
            }
            // ACA HACER LA VALIDACION ?? 
            resolve(res)
          })
          .catch(e => {
            console.log(e);
          })
      })
    }

    const irAlHome = () => {

      // hacer logica de redirect
      // duda: como replantear la logica del store que usa el redirect? preguntar al ng 
    }

    // login()


    // Actualiza el DOM
    $on('pageInit', () => {
      // login()

      // login()
    })


    return $render;
  }
</script>