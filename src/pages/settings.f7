<template>
  <div class="page" data-name="settings">
    <div class="navbar">
      <div class="navbar-bg"></div>
      <div class="navbar-inner sliding">
        <div class="title">Crear usuario</div>
      </div>
    </div>
    <div class="page-content">
      <div class="block-title">Form Example</div>
      <div class="list list-strong-ios list-dividers-ios list-outline-ios">
        <ul>
          <li>
            <div class="item-content item-input">
              <div class="item-inner">
                <div class="item-title item-label">Name</div>
                <div class="item-input-wrap">
                  <input type="text" name="username" placeholder="Your username" value="${username}"
                    @input="${updateUsername}" />
                </div>
              </div>
            </div>
          </li>

          <li>
            <div class="item-content item-input">
              <div class="item-inner">
                <div class="item-title item-label">Password</div>
                <div class="item-input-wrap">
                  <input type="password" name="username" placeholder="Your username" value="${username}"
                    @input="${updatePassword}" />
                </div>
              </div>
            </div>
          </li>
          <div class="block block-strong-ios block-outline-ios grid grid-cols-2 grid-gap">
            <a href="#" class="button button-large button-fill button-raised color-green" @click="${test}">test</a>
            <a href="#" class="button button-large button-fill button-raised color-green"
              @click="${crearUsuario}">ADD</a>
            <a href="#" class="button button-large button-fill button-raised color-red"
              @click="${borrarUsuario}">DEL</a>
            <a href="#" class="button button-large button-fill button-raised color-yellow"
              @click="${getUsuario}">GET</a>
            <a href="#" class="button button-large button-fill button-raised color-blue" @click="${getUsuarios}">GET
              ALL</a>

          </div>

          <div class="card data-table" id="tablaSecundaria">
            ${arrayUsuariosBD ? $h`

            <table>
              <thead>
                <tr>
                  ${Object.keys(arrayUsuariosBD[0]).map(key => $h `
                  <th class="label-cell">${key}</th>
                  `)}
                </tr>
              </thead>
              <tbody id="tableBody">
                ${arrayUsuariosBD.map((fila) => $h`
                <tr>
                  ${Object.keys(fila).map(key => $h `
                  <td class="label-cell" @click="${() => abrirPopup(fila)}">${(fila[key] == "" || fila[key] ==
                    null) ? "no tiene " + key : fila[key]}</td>
                  `)}
                </tr>
                `)}
              </tbody>
            </table>
            ` : $h`
            <h1>no cargada</h1>
            `}


          </div>


          <div class="popup demo-popup2">
            <div class="page">
              <div class="navbar">
                <div class="navbar-bg"></div>
                <div class="navbar-inner">
                  <div class="title">Popup 2</div>
                  <div class="right"><a class="link popup-close">Close</a></div>
                </div>
              </div>
              <div class="page-content">
                <div class="block">
                  <div class="card card-outline card-dividers">
                    <div class="card-header">Nombre: ${filaSeleccionada.eu_nombre}
                      <div class="center">
                        <button id="btnEditarUsuario" class="button button-round"
                          @click="${() => accionUsuario({action: 'editarUsuario', data: filaSeleccionada.eu_id})}">Editar
                          usuario</button>
                      </div>

                    </div>
                    <div class="card-content card-content-padding">Username: ${filaSeleccionada.eu_username}
                    </div>
                    <div class="card-footer">Fecha Alta: ayer


                    </div>
                  </div>

                </div>
              </div>
            </div>
          </div>



          <li>
            <div class="item-content item-input">
              <div class="item-inner">
                <div class="item-title item-label">Gender</div>
                <div class="item-input-wrap">
                  <select>
                    <option>Male</option>
                    <option>Female</option>
                  </select>
                </div>
              </div>
            </div>
          </li>
          <li>
            <div class="item-content item-input">
              <div class="item-inner">
                <div class="item-title item-label">Birth date</div>
                <div class="item-input-wrap">
                  <input type="date" placeholder="Birth day" value="2014-04-30" />
                </div>
              </div>
            </div>
          </li>
          <li>
            <div class="item-content">
              <div class="item-inner">
                <div class="item-title">Toggle</div>
                <div class="item-after">
                  <label class="toggle toggle-init">
                    <input type="checkbox" />
                    <span class="toggle-icon"></span>
                  </label>
                </div>
              </div>
            </div>
          </li>
          <li>
            <div class="item-content item-input">
              <div class="item-inner">
                <div class="item-title item-label">Slider</div>
                <div class="item-input-wrap">
                  <div class="range-slider range-slider-init" data-label="true">
                    <input type="range" value="50" min="0" max="100" step="1" />
                  </div>
                </div>
              </div>
            </div>
          </li>
          <li class="align-top">
            <div class="item-content item-input">
              <div class="item-inner">
                <div class="item-title item-label">Textarea</div>
                <div class="item-input-wrap">
                  <textarea placeholder="Bio"></textarea>
                </div>
              </div>
            </div>
          </li>
          <li class="align-top">
            <div class="item-content item-input">
              <div class="item-inner">
                <div class="item-title item-label">Resizable</div>
                <div class="item-input-wrap">
                  <textarea placeholder="Bio" class="resizable"></textarea>
                </div>
              </div>
            </div>
          </li>
        </ul>
      </div>
      <div class="block-title">Buttons</div>
      <div class="block block-strong-ios block-outline-ios grid grid-cols-2 grid-gap">
        <a href="#" class="button">Button</a>
        <a href="#" class="button button-fill">Fill</a>
        <a href="#" class="button button-raised">Raised</a>
        <a href="#" class="button button-raised button-fill">Raised Fill</a>
        <a href="#" class="button button-round">Round</a>
        <a href="#" class="button button-round button-fill">Round Fill</a>
        <a href="#" class="button button-outline">Outline</a>
        <a href="#" class="button button-round button-outline">Outline Round</a>
        <a href="#" class="button button-small button-outline">Small</a>
        <a href="#" class="button button-small button-round button-outline">Small Round</a>
        <a href="#" class="button button-small button-fill">Small</a>
        <a href="#" class="button button-small button-round button-fill">Small Round</a>
        <a href="#" class="button button-large button-raised">Large</a>
        <a href="#" class="button button-large button-fill button-raised">Large Fill</a>
        <a href="#" class="button button-large button-fill button-raised color-red">Large Red</a>
        <a href="#" class="button button-large button-fill button-raised color-green">Large Green</a>
      </div>
      <div class="block-title">Checkbox group</div>
      <div class="list list-strong-ios list-outline-ios list-dividers-ios">
        <ul>
          <li>
            <label class="item-checkbox item-content">
              <input type="checkbox" name="checkbox" value="Books" checked="checked" />
              <i class="icon icon-checkbox"></i>
              <div class="item-inner">
                <div class="item-title">Books</div>
              </div>
            </label>
          </li>
          <li>
            <label class="item-checkbox item-content">
              <input type="checkbox" name="checkbox" value="Movies" />
              <i class="icon icon-checkbox"></i>
              <div class="item-inner">
                <div class="item-title">Movies</div>
              </div>
            </label>
          </li>
          <li>
            <label class="item-checkbox item-content">
              <input type="checkbox" name="checkbox" value="Food" />
              <i class="icon icon-checkbox"></i>
              <div class="item-inner">
                <div class="item-title">Food</div>
              </div>
            </label>
          </li>
          <li>
            <label class="item-checkbox item-content">
              <input type="checkbox" name="checkbox" value="Drinks" />
              <i class="icon icon-checkbox"></i>
              <div class="item-inner">
                <div class="item-title">Drinks</div>
              </div>
            </label>
          </li>
        </ul>
      </div>
      <div class="block-title">Radio buttons group</div>
      <div class="list list-strong-ios list-outline-ios list-dividers-ios">
        <ul>
          <li>
            <label class="item-radio item-content">
              <input type="radio" name="radio" value="Books" checked="checked" />
              <i class="icon icon-radio"></i>
              <div class="item-inner">
                <div class="item-title">Books</div>
              </div>
            </label>
          </li>
          <li>
            <label class="item-radio item-content">
              <input type="radio" name="radio" value="Movies" />
              <i class="icon icon-radio"></i>
              <div class="item-inner">
                <div class="item-title">Movies</div>
              </div>
            </label>
          </li>
          <li>
            <label class="item-radio item-content">
              <input type="radio" name="radio" value="Food" />
              <i class="icon icon-radio"></i>
              <div class="item-inner">
                <div class="item-title">Food</div>
              </div>
            </label>
          </li>
          <li>
            <label class="item-radio item-content">
              <input type="radio" name="radio" value="Drinks" />
              <i class="icon icon-radio"></i>
              <div class="item-inner">
                <div class="item-title">Drinks</div>
              </div>
            </label>
          </li>
        </ul>
      </div>
    </div>
  </div>
</template>
<script>
  import methods from "../js/methods.mjs"

  export default async (props, {
    $on,
    $update,
    $f7,
  }) => {
    methods.getNombre()
    let popup;

    let username = "";
    let password = "";
    let arrayUsuariosBD = 0;
    let filaSeleccionada = {};



    const updateUsername = (e) => {
      username = e.target.value
    }
    const updatePassword = (e) => {
      password = e.target.value
    }

    const accionUsuario = ({
      action,
      data //este deberia ser el id 
    }) => {
      return new Promise(async (resolve, reject) => {

        if (action == "editarUsuario") {
          // await obtenerDatosUsuario({
          //     idUsuario: data
          // })
          setTimeout(() => {
            methods.redirect({
              page: "404",
              props: {
                action,
                data: {
                  id: data, // aca solo le tengo que pasar el ID del usuario para que lo reciba datos
                }
              }
            })
          }, 200);

          console.log("esta es  la data ")
          console.log(data)
        }
      })
    }

    const test = () => {
      app.views.main.router.navigate(`/404/`)
    }

    const crearUsuario = () => {

      return new Promise((resolve, reject) => {
        fetch(`http://172.16.0.231:3320/users/account/new/${username}/${password}?`, {
            method: "POST",
            headers: {
              'Content-Type': 'application/x-www-form-urlencoded',
            },
          })
          .then(data => data.json())
          .then(res => {
            if (res.creado) {
              console.log(res.usuarioCreado)
            }
            console.log("creadisimo")

            resolve(res)
          })
          .catch(e => {
            console.log(e);
          })
      })
    }

    const borrarUsuario = () => {
      return new Promise((resolve, reject) => {
        fetch(`http://172.16.0.231:3320/users/account/clear/${username}/${password}`, {
            method: "DELETE",
          })
          .then(data => data.json())
          .then(res => {
            if (res.borrado) {
              console.log("borradisimo")
              console.log(res.usuarioBorrado)
            }
            resolve(res)
          })
          .catch(e => {
            console.log(e);
          })
      })
    }

    const getUsuario = () => {
      return new Promise((resolve, reject) => {
        fetch(`http://172.16.0.231:3320/users/account/name/${username}/${password}?`, {
            method: "GET",
          })
          .then(data => data.json())
          .then(res => {
            if (res.usuarioEncontrado) {
              console.log(res.usuarioEncontrado)
            } else {
              console.log("no hay usuario que coincida")
            }
            resolve(res)
          })
          .catch(e => {
            console.log(e);
          })
      })
    }

    function getUsuarios() {
      return new Promise((resolve, reject) => {
        fetch(`http://172.16.0.231:3320/users/account`, {
            method: "GET",
          })
          .then(data => data.json())
          .then(res => {

            // todo: cambiar esta logica
            arrayUsuariosBD = res.usuarios
            console.log(res.usuarios)
            $update()
            resolve(res)
          })
          .catch(e => {
            console.log(e);
          })
      })
    }

    const abrirPopup = (datosUsuario) => {
      filaSeleccionada = datosUsuario;
      $update()
      popup.open()
      // todo: hacer la logica del redirect o porl o menos de abrir una nueva page de alguna forma 
      // getear el id para cargarlo
    }

    $on('pageInit', () => {

      popup = $f7.popup.create({
        el: '.demo-popup2',
        swipeToClose: true,
      });
    })

    $on('pageBeforeOut', () => {
      if (popup) popup.close();
    })

    $on('pageBeforeUnmount', () => {
      if (popup) popup.destroy();
    })



    return $render;
  };
</script>